<?php include __DIR__ . '/../inc/header.phtml'; ?>
<?php include __DIR__ . '/../inc/nav.phtml'; ?>
            <main class="col-right bg-white overflow-y-auto pl-24 pr-24 pt-12 pb-12 max-[976px]:pl-12 max-[976px]:pr-12 max-[976px]:pt-4 max-[976px]:pb-4 dark:text-gray-300 dark:bg-gray-900">
                <div class="main-content">
<?php if (!empty($segments)):
    include __DIR__ . '/../inc/breadcrumb.phtml';
endif; ?>
                    <h2><?=$title; ?></h2>
                    <p>The Pop PHP Framework comes with a base abstract controller class
                        <code class="inline-code">Pop\Controller\AbstractController</code> that can be extended to create
                        the controller classes needed for your application. When writing your controller classes by extending
                        the abstract controller class, you can define the methods that represent the actions that will be
                        executed on the matched route. If you choose not to use the provided abstract controller class,
                        you can write your own, but it needs to implement the controller interface
                        <code class="inline-code">Pop\Controller\ControllerInterface</code> at a minimum. </p>
                    <h5>HTTP Example</h5>
                    <p>Here's an example of what a basic controller might look like for a web application:</p>
                    <pre><code class="language-php">namespace MyApp\Controller;

use Pop\Controller\AbstractController;
use Pop\Http\Server\Request;
use Pop\Http\Server\Response;

class IndexController extends AbstractController
{
    protected $request;
    protected $response;

    public function __construct(Request $request, Response $response)
    {
        $this->request  = $request;
        $this->response = $response;
    }

    public function index()
    {
        // Show the index page
    }

    public function products()
    {
        // Show the products page
    }

}</code><a href="#" title="Copy" class="copy-link" x-data="copyCode" x-on:click.prevent="copy($el)"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 relative"><path stroke-linecap="round" stroke-linejoin="round" d="M8.25 7.5V6.108c0-1.135.845-2.098 1.976-2.192.373-.03.748-.057 1.123-.08M15.75 18H18a2.25 2.25 0 002.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 00-1.123-.08M15.75 18.75v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5A3.375 3.375 0 006.375 7.5H5.25m11.9-3.664A2.251 2.251 0 0015 2.25h-1.5a2.251 2.251 0 00-2.15 1.586m5.8 0c.065.21.1.433.1.664v.75h-6V4.5c0-.231.035-.454.1-.664M6.75 7.5H4.875c-.621 0-1.125.504-1.125 1.125v12c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V16.5a9 9 0 00-9-9z" /></svg></a></pre>
                    <p>The above example uses the <code class="inline-code">popphp/pop-http</code> component and injects a server request and a response object
                        into the controller's constructor. For more on how to inject controller parameters into the controller's
                        constructor, refer the section on <a href="<?=$version; ?>/getting-started/routing#controller-params">controller parameters</a> under Routing.</p>
                    <h5>CLI Example</h5>
                    <p>For a console application, your controller class might look like this example below, utilizing the <code class="inline-code">popphp/pop-console</code>
                        component and injecting a console object:</p>
                    <pre><code class="language-php">namespace MyApp\Controller;

use Pop\Controller\AbstractController;
use Pop\Console\Console;

class ConsoleController extends AbstractController
{
    protected $console;

    public function __construct(Console $console)
    {
        $this->console = $console;
    }

    public function home()
    {
        // Show the home screen
    }

    public function users()
    {
        // Show the users screen
    }

}</code><a href="#" title="Copy" class="copy-link" x-data="copyCode" x-on:click.prevent="copy($el)"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 relative"><path stroke-linecap="round" stroke-linejoin="round" d="M8.25 7.5V6.108c0-1.135.845-2.098 1.976-2.192.373-.03.748-.057 1.123-.08M15.75 18H18a2.25 2.25 0 002.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 00-1.123-.08M15.75 18.75v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5A3.375 3.375 0 006.375 7.5H5.25m11.9-3.664A2.251 2.251 0 0015 2.25h-1.5a2.251 2.251 0 00-2.15 1.586m5.8 0c.065.21.1.433.1.664v.75h-6V4.5c0-.231.035-.454.1-.664M6.75 7.5H4.875c-.621 0-1.125.504-1.125 1.125v12c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V16.5a9 9 0 00-9-9z" /></svg></a></pre>
                </div>
<?php include __DIR__ . '/../inc/footer.phtml'; ?>
